/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as StaffIndexImport } from './routes/staff/index'
import { Route as StaffCreateImport } from './routes/staff/create'
import { Route as MasterMeasureUnitImport } from './routes/master/measure-unit'
import { Route as MasterFabricTypeImport } from './routes/master/fabric-type'
import { Route as StaffTasksIndexImport } from './routes/staff/tasks/index'
import { Route as StaffRolesIndexImport } from './routes/staff/roles/index'
import { Route as MasterClothingTypeIndexImport } from './routes/master/clothing-type/index'
import { Route as MasterClothingTypeCreateImport } from './routes/master/clothing-type/create'
import { Route as StaffTasksTaskIdEditImport } from './routes/staff/tasks/$taskId.edit'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const StaffIndexRoute = StaffIndexImport.update({
  id: '/staff/',
  path: '/staff/',
  getParentRoute: () => rootRoute,
} as any)

const StaffCreateRoute = StaffCreateImport.update({
  id: '/staff/create',
  path: '/staff/create',
  getParentRoute: () => rootRoute,
} as any)

const MasterMeasureUnitRoute = MasterMeasureUnitImport.update({
  id: '/master/measure-unit',
  path: '/master/measure-unit',
  getParentRoute: () => rootRoute,
} as any)

const MasterFabricTypeRoute = MasterFabricTypeImport.update({
  id: '/master/fabric-type',
  path: '/master/fabric-type',
  getParentRoute: () => rootRoute,
} as any)

const StaffTasksIndexRoute = StaffTasksIndexImport.update({
  id: '/staff/tasks/',
  path: '/staff/tasks/',
  getParentRoute: () => rootRoute,
} as any)

const StaffRolesIndexRoute = StaffRolesIndexImport.update({
  id: '/staff/roles/',
  path: '/staff/roles/',
  getParentRoute: () => rootRoute,
} as any)

const MasterClothingTypeIndexRoute = MasterClothingTypeIndexImport.update({
  id: '/master/clothing-type/',
  path: '/master/clothing-type/',
  getParentRoute: () => rootRoute,
} as any)

const MasterClothingTypeCreateRoute = MasterClothingTypeCreateImport.update({
  id: '/master/clothing-type/create',
  path: '/master/clothing-type/create',
  getParentRoute: () => rootRoute,
} as any)

const StaffTasksTaskIdEditRoute = StaffTasksTaskIdEditImport.update({
  id: '/staff/tasks/$taskId/edit',
  path: '/staff/tasks/$taskId/edit',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/master/fabric-type': {
      id: '/master/fabric-type'
      path: '/master/fabric-type'
      fullPath: '/master/fabric-type'
      preLoaderRoute: typeof MasterFabricTypeImport
      parentRoute: typeof rootRoute
    }
    '/master/measure-unit': {
      id: '/master/measure-unit'
      path: '/master/measure-unit'
      fullPath: '/master/measure-unit'
      preLoaderRoute: typeof MasterMeasureUnitImport
      parentRoute: typeof rootRoute
    }
    '/staff/create': {
      id: '/staff/create'
      path: '/staff/create'
      fullPath: '/staff/create'
      preLoaderRoute: typeof StaffCreateImport
      parentRoute: typeof rootRoute
    }
    '/staff/': {
      id: '/staff/'
      path: '/staff'
      fullPath: '/staff'
      preLoaderRoute: typeof StaffIndexImport
      parentRoute: typeof rootRoute
    }
    '/master/clothing-type/create': {
      id: '/master/clothing-type/create'
      path: '/master/clothing-type/create'
      fullPath: '/master/clothing-type/create'
      preLoaderRoute: typeof MasterClothingTypeCreateImport
      parentRoute: typeof rootRoute
    }
    '/master/clothing-type/': {
      id: '/master/clothing-type/'
      path: '/master/clothing-type'
      fullPath: '/master/clothing-type'
      preLoaderRoute: typeof MasterClothingTypeIndexImport
      parentRoute: typeof rootRoute
    }
    '/staff/roles/': {
      id: '/staff/roles/'
      path: '/staff/roles'
      fullPath: '/staff/roles'
      preLoaderRoute: typeof StaffRolesIndexImport
      parentRoute: typeof rootRoute
    }
    '/staff/tasks/': {
      id: '/staff/tasks/'
      path: '/staff/tasks'
      fullPath: '/staff/tasks'
      preLoaderRoute: typeof StaffTasksIndexImport
      parentRoute: typeof rootRoute
    }
    '/staff/tasks/$taskId/edit': {
      id: '/staff/tasks/$taskId/edit'
      path: '/staff/tasks/$taskId/edit'
      fullPath: '/staff/tasks/$taskId/edit'
      preLoaderRoute: typeof StaffTasksTaskIdEditImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/master/fabric-type': typeof MasterFabricTypeRoute
  '/master/measure-unit': typeof MasterMeasureUnitRoute
  '/staff/create': typeof StaffCreateRoute
  '/staff': typeof StaffIndexRoute
  '/master/clothing-type/create': typeof MasterClothingTypeCreateRoute
  '/master/clothing-type': typeof MasterClothingTypeIndexRoute
  '/staff/roles': typeof StaffRolesIndexRoute
  '/staff/tasks': typeof StaffTasksIndexRoute
  '/staff/tasks/$taskId/edit': typeof StaffTasksTaskIdEditRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/master/fabric-type': typeof MasterFabricTypeRoute
  '/master/measure-unit': typeof MasterMeasureUnitRoute
  '/staff/create': typeof StaffCreateRoute
  '/staff': typeof StaffIndexRoute
  '/master/clothing-type/create': typeof MasterClothingTypeCreateRoute
  '/master/clothing-type': typeof MasterClothingTypeIndexRoute
  '/staff/roles': typeof StaffRolesIndexRoute
  '/staff/tasks': typeof StaffTasksIndexRoute
  '/staff/tasks/$taskId/edit': typeof StaffTasksTaskIdEditRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/master/fabric-type': typeof MasterFabricTypeRoute
  '/master/measure-unit': typeof MasterMeasureUnitRoute
  '/staff/create': typeof StaffCreateRoute
  '/staff/': typeof StaffIndexRoute
  '/master/clothing-type/create': typeof MasterClothingTypeCreateRoute
  '/master/clothing-type/': typeof MasterClothingTypeIndexRoute
  '/staff/roles/': typeof StaffRolesIndexRoute
  '/staff/tasks/': typeof StaffTasksIndexRoute
  '/staff/tasks/$taskId/edit': typeof StaffTasksTaskIdEditRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/master/fabric-type'
    | '/master/measure-unit'
    | '/staff/create'
    | '/staff'
    | '/master/clothing-type/create'
    | '/master/clothing-type'
    | '/staff/roles'
    | '/staff/tasks'
    | '/staff/tasks/$taskId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/master/fabric-type'
    | '/master/measure-unit'
    | '/staff/create'
    | '/staff'
    | '/master/clothing-type/create'
    | '/master/clothing-type'
    | '/staff/roles'
    | '/staff/tasks'
    | '/staff/tasks/$taskId/edit'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/master/fabric-type'
    | '/master/measure-unit'
    | '/staff/create'
    | '/staff/'
    | '/master/clothing-type/create'
    | '/master/clothing-type/'
    | '/staff/roles/'
    | '/staff/tasks/'
    | '/staff/tasks/$taskId/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  MasterFabricTypeRoute: typeof MasterFabricTypeRoute
  MasterMeasureUnitRoute: typeof MasterMeasureUnitRoute
  StaffCreateRoute: typeof StaffCreateRoute
  StaffIndexRoute: typeof StaffIndexRoute
  MasterClothingTypeCreateRoute: typeof MasterClothingTypeCreateRoute
  MasterClothingTypeIndexRoute: typeof MasterClothingTypeIndexRoute
  StaffRolesIndexRoute: typeof StaffRolesIndexRoute
  StaffTasksIndexRoute: typeof StaffTasksIndexRoute
  StaffTasksTaskIdEditRoute: typeof StaffTasksTaskIdEditRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  MasterFabricTypeRoute: MasterFabricTypeRoute,
  MasterMeasureUnitRoute: MasterMeasureUnitRoute,
  StaffCreateRoute: StaffCreateRoute,
  StaffIndexRoute: StaffIndexRoute,
  MasterClothingTypeCreateRoute: MasterClothingTypeCreateRoute,
  MasterClothingTypeIndexRoute: MasterClothingTypeIndexRoute,
  StaffRolesIndexRoute: StaffRolesIndexRoute,
  StaffTasksIndexRoute: StaffTasksIndexRoute,
  StaffTasksTaskIdEditRoute: StaffTasksTaskIdEditRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/master/fabric-type",
        "/master/measure-unit",
        "/staff/create",
        "/staff/",
        "/master/clothing-type/create",
        "/master/clothing-type/",
        "/staff/roles/",
        "/staff/tasks/",
        "/staff/tasks/$taskId/edit"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/master/fabric-type": {
      "filePath": "master/fabric-type.tsx"
    },
    "/master/measure-unit": {
      "filePath": "master/measure-unit.tsx"
    },
    "/staff/create": {
      "filePath": "staff/create.tsx"
    },
    "/staff/": {
      "filePath": "staff/index.tsx"
    },
    "/master/clothing-type/create": {
      "filePath": "master/clothing-type/create.tsx"
    },
    "/master/clothing-type/": {
      "filePath": "master/clothing-type/index.tsx"
    },
    "/staff/roles/": {
      "filePath": "staff/roles/index.tsx"
    },
    "/staff/tasks/": {
      "filePath": "staff/tasks/index.tsx"
    },
    "/staff/tasks/$taskId/edit": {
      "filePath": "staff/tasks/$taskId.edit.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
